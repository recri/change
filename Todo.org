* changes.elf.org
** progessive web app of the I Ching
** url a string of two digit octal numbers from 00 to 77 (0 to 63 decimal)
   each two digit octal number corresponding to one of the 64 hexagrams
** display the text of the I Ching for each hexagram
   and the changing lines for each transition
   and hot link the commentary, 
*** The url splits into hexagrams
    and the differences between adjacent hexagrams encode moving lines.
    Hence split into a list of hexagrams and insert the moving lines
    into the list.
    The hexagrams become hexagram cards identified by octal numbers
    from 0 to 77, and the xor of the adjacent hexagrams has ones for
    moving lines and zeroes for stationary lines.
    The moving lines become interpolated change lines identified by
    the preceding hexagram and a power of two for the moving line.
    There is the bonus moving line where all lines are moving.
*** The hexagram property of the content card indexes a database
    of content which may be the Wilhelm/Baynes text or something else.
*** <change-hexagram content="[0-7][0-7]">
*** <change-line content="[0-7][0-7]
    So the content is simply a sequence of {hex, {line}*}* 
** controls
*** cast -> append a new hexagram to the url
*** undo -> remove the last hexagram from the url
*** redo -> restore the last hexagram to the url
*** over -> start over
** animation
*** cast is two steps, 
    the time between initiation and completion
    seeds the random number generator 
    which selects the lines of the cast
*** or the cast requires a commit to select each line
* rewrite the text without gender stereotypes
  the better person, the dependent, ...
  the dog owner and the dog
  surface the original wilhem-baynes translation.
* try running the chinese through google translate?
  That works terribly, the archaic text doesn't even
  make sense, it ends up as anglicized pinyin.
* Todo list as of May 23
[x] Move the menu to the side bar
[x] Put the buttons at the foot of the View page
	put them at the head of the View page instead
	put them at the foot, again.
[ ] Make the cast-view window scroll to end after each
	appended cast
[x] Style those buttons
[x] Incorporate mersenne-twister.js
[x] Use time of cast button press as random seed
[ ] Optionally add commentary
[ ] Optionally add other translations
[x] Catch "addtodesktop" event and handle
  minimal is
  window.addEventListener('beforeinstallprompt', (e) => {
    // Prevent Chrome 67 and earlier from automatically showing the prompt
    e.preventDefault();
    // Show the prompt
    deferredPrompt.prompt();
  });
  also can save e for later display.
[x] Change distributions in settings
[x] Change cast protocol in settings
	but cast protocols remain to be implemented
	other than the single shot
[x] Draw hexagrams, including moving lines
	initial hexagram is static
	moving lines hexagram is moving
	final hexagram is static
[x] Hexagrams need styling,
	-x- is hard to see,
	lines are too faint,
	try using 1/13th as line stroke, interline spacing, and margins,
	then shift space to margins and spacing from line strokes,
	then tune the marker strokes
[x] Move about and settings into dialogs
	no, leave them as pages
[x] Pick a hexagram as the app icon
	Inner truth. Pigs and fishes.
[x] asynchronously load text, used
	import("../code/changes.js").then((mod) => iching.setText(mod))
	back the change out, ruined the load time
[x] accept list of changes in url, eg ([6789]{6})(,[6789]{6})*
	and display the specfied change or changes
	but do not put all casts into location
[ ] redo icon images with white background, or some other background,
	maybe go for some
[x] move all of the change manipulations into the change-view
	except the update, which still shares with redux
[ ] write tests to verify the random number generation
[ ] write tests to verify the distributions
	choosen(
[ ] write tests to cover all the single cast results
[ ] add save restore settings to local storage
[ ] add option to save readings to local storage
[ ] add option to record the questions asked
[ ] add option to export current change url to clipboard
[-] extend the change syntax to include
	; to separate independent casts
	- to thread casts together by constructing the
		transition between adjacent casts
[-] the linked protocol is biased using the yarrow stalk
	tends toward yin because yang ages faster
[x] replace the origin - movement - destination reading with
	movement when movement, otherwise origin equal to destination
[x] leave off the "image", it's from a subsequent commentary on the original text
	from the xiang zhuan
[-] maybe there's a way to make a continuously evolving
	change, where the lines age and transform as
	you watch.
[ ] add keyboard accelerators to cast/undo/clear buttons
